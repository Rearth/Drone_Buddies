architectury {
    common rootProject.enabled_platforms.split(',')
}

loom.accessWidenerPath.set(file("src/main/resources/drones.accesswidener"))

sourceSets {
    main {
        resources.srcDir "src/main/generated"
    }
}

tasks.named('processResources') {

    from("$rootDir/docs") {
        into "assets/oracle_index/books/drones"
        exclude '.assets/item/**'   // items are rendered ingame as actual item components, no need to include them here
    }

    doLast {
        println "processResources executed: wiki folder copied into assets/oracle_index"
    }
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    modImplementation("io.wispforest:accessories-fabric:${project.accessories_version}")    // common breaks everything for some reason?
}
